<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jp.co.runy.logical_thinking.mapper.LogicTreeMapper">
	<resultMap type="jp.co.runy.logical_thinking.domain.LogicTree" id="LogicTree">
		<id column="id" property="id"/>
		<result column="partner_wants" property="partnerWants"/>
		<result column="current_state" property="currentState"/>
		<result column="description_type" property="descriptionType"/>
		<result column="framework_id" property="frameworkId"/>
		<result column="insistence" property="insistence"/>
		<result column="session_id" property="sessionId"/>
		<collection property="firstHierarchyList" ofType="jp.co.runy.logical_thinking.domain.FirstHierarchy">
			<result column="first_id" property="id"/>
			<result column="first_word" property="word"/>
			<result column="first_another_word" property="anotherWord"/>
			<result column="id" property="logicTreeId"/>
			<collection property="secondHierarchyList" ofType="jp.co.runy.logical_thinking.domain.SecondHierarchy">
				<result column="second_id" property="id"/>
				<result column="second_explanation" property="explanation"/>
				<result column="first_id" property="firstHierarchyId"/>
				<collection property="thirdHierarchyList" ofType="jp.co.runy.logical_thinking.domain.ThirdHierarchy">
					<result column="third_id" property="id"/>
					<result column="third_explanation" property="explanation"/>
					<result column="second_id" property="secondHierarchyId"/>
					<collection property="fourthHierarchyList" ofType="jp.co.runy.logical_thinking.domain.FourthHierarchy">
						<result column="fourth_id" property="id"/>
						<result column="fourth_explanation" property="explanation"/>
						<result column="third_id" property="thirdHierarchyId"/>
						<collection property="fifthHierarchyList" ofType="jp.co.runy.logical_thinking.domain.FifthHierarchy">
							<result column="fifth_id" property="id"/>
							<result column="fifth_explanation" property="explanation"/>
							<result column="fourth_id" property="fourthHierarchyId"/>
							<collection property="sixthHierarchyList" ofType="jp.co.runy.logical_thinking.domain.SixthHierarchy">
								<result column="sixth_id" property="id"/>
								<result column="sixth_explanation" property="explanation"/>
								<result column="fifth_id" property="fifthHierarchyId"/>
								<collection property="seventhHierarchyList" ofType="jp.co.runy.logical_thinking.domain.SeventhHierarchy">
									<result column="seventh_id" property="id"/>
									<result column="seventh_explanation" property="explanation"/>
									<result column="sixth_id" property="sixthHierarchyId"/>
									<collection property="eighthHierarchyList" ofType="jp.co.runy.logical_thinking.domain.EighthHierarchy">
										<result column="eighth_id" property="id"/>
										<result column="eighth_explanation" property="explanation"/>
										<result column="seventh_id" property="seventhHierarchyId"/>
									</collection>
								</collection>
							</collection>
						</collection>
					</collection>
				</collection>
			</collection>
		</collection>
	</resultMap>
	<select id="findByIdAndSessionId" resultMap="LogicTree" parameterType="string">
		select 
			lt.id, 
			lt.partner_wants, 
			lt.current_state, 
			lt.description_type, 
			lt.framework_id, 
			lt.insistence, 
			lt.session_id, 
			first.id as first_id, 
			first.word as first_word, 
			first.another_word as first_another_word, 
			second.id as second_id, 
			second.explanation as second_explanation,
			third.id as third_id, 
			third.explanation as third_explanation,
			fourth.id as fourth_id, 
			fourth.explanation as fourth_explanation,
			fifth.id as fifth_id, 
			fifth.explanation as fifth_explanation,
			sixth.id as sixth_id, 
			sixth.explanation as sixth_explanation,
			seventh.id as seventh_id, 
			seventh.explanation as seventh_explanation,
			eighth.id as eighth_id, 
			eighth.explanation as eighth_explanation    
		from 
			logic_trees lt 
		left join 
			first_hierarchies first on lt.id = first.logic_tree_id 
		left join
			second_hierarchies second on first.id = second.first_hierarchy_id
		left join 
			third_hierarchies third on second.id = third.second_hierarchy_id
		left join 
			fourth_hierarchies fourth on third.id = fourth.third_hierarchy_id 
		left join 
			fifth_hierarchies fifth on fourth.id = fifth.fourth_hierarchy_id 
		left join 
			sixth_hierarchies sixth on fifth.id = sixth.fifth_hierarchy_id 
		left join 
			seventh_hierarchies seventh on sixth.id = seventh.sixth_hierarchy_id 
		left join 
			eighth_hierarchies eighth on seventh.id = eighth.seventh_hierarchy_id 	 
		where
			lt.session_id = #{sessionId}
		and
			lt.id = ${logicTreeId}
		order by
			first.display_order 
			,second.display_order 
			,third.display_order 
			,fourth.display_order 
			,fifth.display_order 
			,sixth.display_order 
			,seventh.display_order 
			,eighth.display_order 
		;
	</select>
	
	<select id="findBySessionId" resultType="jp.co.runy.logical_thinking.domain.LogicTree">
		select 
			id,
			partner_wants,
			current_state,
			description_type,
			framework_id,
			insistence
		from
		 	logic_trees
		where
			session_id = #{sessionId};
    </select>

	<select id="insert" resultType="int" parameterType="jp.co.runy.logical_thinking.domain.LogicTree">
		with insert_logictree AS (
			insert into logic_trees (
				<trim prefixOverrides=", ">
					<if test="partnerWants != null">, partner_wants</if>
					<if test="currentState != null">, current_state</if>
					<if test="descriptionType != null">, description_type</if>
					<if test="frameworkId != 0">, framework_id</if>
					<if test="insistence != null">, insistence</if>
					<if test="sessionId != null">, session_id</if>
				</trim>
			)  
			values (
				<trim prefixOverrides=",">
					<if test="partnerWants != null">, #{partnerWants}</if>
					<if test="currentState != null">, #{currentState}</if>
					<if test="descriptionType != null">, #{descriptionType}</if>
					<if test="frameworkId != 0">, #{frameworkId}</if>
					<if test="insistence != null">, #{insistence}</if>
					<if test="sessionId != null">, #{sessionId}</if>
				</trim>
			)
			returning id)
		<foreach collection="firstHierarchyList" item="firstHierarchy" index="index1">
			, insert_first_hierarchies_${index1} AS (
				insert into first_hierarchies (
					<trim prefixOverrides=", ">
						<if test="firstHierarchy.word != null">, word</if>
						<if test="firstHierarchy.anotherWord != null">, another_word</if>
						, logic_tree_id
						<if test="firstHierarchy.displayOrder != null">, display_order</if>
					</trim>
				) 
				select
					<trim prefixOverrides=",">
						<if test="firstHierarchy.word != null">, #{firstHierarchy.word}</if>
						<if test="firstHierarchy.anotherWord != null">, #{firstHierarchy.anotherWord}</if>
						, id
						<if test="firstHierarchy.displayOrder != null">, #{firstHierarchy.displayOrder}</if>
					</trim>
				from
					insert_logictree
				returning id)
			<foreach collection="firstHierarchy.secondHierarchyList" item="secondHierarchy" index="index2">
				, insert_second_hierarchies_${index1}_${index2} AS (
					insert into second_hierarchies (
						<trim prefixOverrides=", ">
							<if test="secondHierarchy.explanation != null">, explanation</if>
							, first_hierarchy_id
							<if test="secondHierarchy.displayOrder != null">, display_order</if>
						</trim>
					) 
					select
						<trim prefixOverrides=",">
							<if test="secondHierarchy.explanation != null">, #{secondHierarchy.explanation}</if>
							, id
							<if test="secondHierarchy.displayOrder != null">, #{secondHierarchy.displayOrder}</if>
						</trim>
					from
						insert_first_hierarchies_${index1}
					returning id
				)
				<foreach collection="secondHierarchy.thirdHierarchyList" item="thirdHierarchy" index="index3">
					, insert_third_hierarchies_${index1}_${index2}_${index3} AS (
						insert into third_hierarchies (
							<trim prefixOverrides=", ">
								<if test="thirdHierarchy.explanation != null">, explanation</if>
								, second_hierarchy_id
								<if test="thirdHierarchy.displayOrder != null">, display_order</if>
							</trim>
						) 
						select
							<trim prefixOverrides=",">
								<if test="thirdHierarchy.explanation != null">, #{thirdHierarchy.explanation}</if>
								, id
								<if test="thirdHierarchy.displayOrder != null">, #{thirdHierarchy.displayOrder}</if>
							</trim>
						from
							insert_second_hierarchies_${index1}_${index2}
						returning id
					)
					<foreach collection="thirdHierarchy.fourthHierarchyList" item="fourthHierarchy" index="index4">
						, insert_fourth_hierarchies_${index1}_${index2}_${index3}_${index4} AS (
							insert into fourth_hierarchies (
								<trim prefixOverrides=", ">
									<if test="fourthHierarchy.explanation != null">, explanation</if>
									, third_hierarchy_id
									<if test="fourthHierarchy.displayOrder != null">, display_order</if>
								</trim>
							) 
							select
								<trim prefixOverrides=",">
									<if test="fourthHierarchy.explanation != null">, #{fourthHierarchy.explanation}</if>
									, id
									<if test="fourthHierarchy.displayOrder != null">, #{fourthHierarchy.displayOrder}</if>
								</trim>
							from
								insert_third_hierarchies_${index1}_${index2}_${index3}
							returning id
						)
						<foreach collection="fourthHierarchy.fifthHierarchyList" item="fifthHierarchy" index="index5">
							, insert_fifth_hierarchies_${index1}_${index2}_${index3}_${index4}_${index5} AS (
								insert into fifth_hierarchies (
									<trim prefixOverrides=", ">
										<if test="fifthHierarchy.explanation != null">, explanation</if>
										, fourth_hierarchy_id
										<if test="fifthHierarchy.displayOrder != null">, display_order</if>
									</trim>
								) 
								select
									<trim prefixOverrides=",">
										<if test="fifthHierarchy.explanation != null">, #{fifthHierarchy.explanation}</if>
										, id
										<if test="fifthHierarchy.displayOrder != null">, #{fifthHierarchy.displayOrder}</if>
									</trim>
								from
									insert_fourth_hierarchies_${index1}_${index2}_${index3}_${index4}
								returning id
							)
							<foreach collection="fifthHierarchy.sixthHierarchyList" item="sixthHierarchy" index="index6">
								, insert_sixth_hierarchies_${index1}_${index2}_${index3}_${index4}_${index5}_${index6} AS (
									insert into sixth_hierarchies (
										<trim prefixOverrides=", ">
											<if test="sixthHierarchy.explanation != null">, explanation</if>
											, fifth_hierarchy_id
											<if test="sixthHierarchy.displayOrder != null">, display_order</if>
										</trim>
									) 
									select
										<trim prefixOverrides=",">
											<if test="sixthHierarchy.explanation != null">, #{sixthHierarchy.explanation}</if>
											, id
											<if test="sixthHierarchy.displayOrder != null">, #{sixthHierarchy.displayOrder}</if>
										</trim>
									from
										insert_fifth_hierarchies_${index1}_${index2}_${index3}_${index4}_${index5}
									returning id
								)
								<foreach collection="sixthHierarchy.seventhHierarchyList" item="seventhHierarchy" index="index7">
									, insert_seventh_hierarchies_${index1}_${index2}_${index3}_${index4}_${index5}_${index6}_${index7} AS (
										insert into seventh_hierarchies (
											<trim prefixOverrides=", ">
												<if test="seventhHierarchy.explanation != null">, explanation</if>
												, sixth_hierarchy_id
												<if test="seventhHierarchy.displayOrder != null">, display_order</if>
											</trim>
										) 
										select
											<trim prefixOverrides=",">
												<if test="seventhHierarchy.explanation != null">, #{seventhHierarchy.explanation}</if>
												, id
												<if test="seventhHierarchy.displayOrder != null">, #{seventhHierarchy.displayOrder}</if>
											</trim>
										from
											insert_sixth_hierarchies_${index1}_${index2}_${index3}_${index4}_${index5}_${index6}
										returning id
									)
									<foreach collection="seventhHierarchy.eighthHierarchyList" item="eighthHierarchy" index="index8">
										, insert_eighth_hierarchies_${index1}_${index2}_${index3}_${index4}_${index5}_${index6}_${index7}_${index8} AS (
											insert into eighth_hierarchies (
												<trim prefixOverrides=", ">
													<if test="eighthHierarchy.explanation != null">, explanation</if>
													, seventh_hierarchy_id
													<if test="eighthHierarchy.displayOrder != null">, display_order</if>
												</trim>
											) 
											select
												<trim prefixOverrides=",">
													<if test="eighthHierarchy.explanation != null">, #{eighthHierarchy.explanation}</if>
													, id
													<if test="eighthHierarchy.displayOrder != null">, #{eighthHierarchy.displayOrder}</if>
												</trim>
											from
												insert_seventh_hierarchies_${index1}_${index2}_${index3}_${index4}_${index5}_${index6}_${index7}
											returning id
										)
									</foreach>
								</foreach>
							</foreach>
						</foreach>
					</foreach>
				</foreach>
			</foreach>
		</foreach>
		select id from insert_logictree;
	</select>
	<delete id="deleteBySessionId">
		delete from logic_trees where session_id = #{sessionId}
	</delete>
	
</mapper>